%h2.edits
  = edit_count
#content
  -flash.each do |k,v|
    %div{:class => k}= v
  %table.edits
    %tr
      %th.title.hint
        =link_to_unless @filter == 'new', 'New', url_for(params.merge({:filter => 'new'}))
        |
        =link_to_unless @filter == 'accepted', 'Accepted', url_for(params.merge({:filter => 'accepted'}))
        |
        =link_to_unless @filter == 'rejected', 'Rejected', url_for(params.merge({:filter => 'rejected'}))
      -if @edits.count > 0
        %th.preview.hint show
    -@edits.each do |edit|
      %tr
        %td.title
          -if is_editor_for?(edit)
            =form_for edit, :html => {:class => 'editor-options'} do |f|
              =hidden_field_tag 'view', params[:view]
              =hidden_field_tag 'url', params[:url]
              =hidden_field_tag 'return_to', request.fullpath
              %p.accept
                %label
                  =f.radio_button :status, 'accepted'
                  Accept
              %p.reject
                %label 
                  =f.radio_button :status, 'rejected'
                  Reject
          = edit_author(edit)
          %p.hint{:title => "distance: #{edit.distance}"}
            = edit_time(edit)
            ago
        %td.preview
          %input{:type => 'radio', :name => 'preview-selector', :class => 'edit-preview-toggle', :value => diff_edit(edit, false)}
          %input{:type => 'hidden', :class => 'element_path', :value => edit.element_path}
%p.copy-pasta-editable.hint Click text with this icon to suggest changes
%p.options
  %input{:type => 'button', :value => 'Close', :class => 'close secondary'}
